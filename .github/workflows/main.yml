name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build JAR
        run: ./gradlew clean bootJar -x test

      - name: Copy and deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_VM_HOST }}
          username: ${{ secrets.AWS_VM_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            set -e  # 오류 발생 시 즉시 중단

            cd /home/${{ secrets.AWS_VM_USER }}/moneytogether/

            # Docker 컨테이너 중지 (실패해도 무시)
            docker compose down || true

            # .env 파일 생성
            if [ ! -f .env ]; then
              echo "${{ secrets.ENV_FILE }}" > .env
              echo ".env 파일 생성 완료"
            fi

            # Firebase 서비스 키 생성
            mkdir -p /home/${{ secrets.AWS_VM_USER }}/moneytogether/app/firebase
            echo "${{ secrets.FIREBASE_KEY }}" > /home/${{ secrets.AWS_VM_USER }}/moneytogether/app/firebase/firebase-service-key.json

            # Dockerfile 존재 여부 확인
            if [ ! -f Dockerfile ]; then
              echo "Dockerfile이 존재하지 않습니다! 배포를 중단합니다."
              exit 1
            fi

            # Docker Compose 빌드 및 실행
            docker compose up -d --build
